//https://leetcode.com/problems/combination-sum/

//C++

class Solution {
public:
    void recur(vector<int>& candidates, int target, int sum,vector<int>& sub,vector<vector<int>>& ans,  int  index){
        if(index==candidates.size()){
            if(sum==0){
                ans.push_back(sub);
            }
            return;
        }
        recur(candidates,target,sum,sub,ans,index+1);
        sub.push_back(candidates[index]);
        if(candidates[index]<=sum){
            recur(candidates,target,sum-candidates[index],sub,ans,index);

        }
        sub.pop_back();
    }

    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> sub;
        recur(candidates, target,target,sub,ans,0);
        return ans;
    }
};